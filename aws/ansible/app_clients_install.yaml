# Top-level playbook that initialises the application client instances for the SSTable Sideloader tests
#
# Requires an inventory file with a group called "clients" containing the public IPs of the application client instances, because we do not have a jumphost.
# These are not EIPs so they will have to be changed every time.
# This inventory file can be generated automatically with the init_running_app_clients.sh script.
# All clients to be included in the inventory must be running when the above script is run.
#
# Things that it does:
# - Install OpenJDK 11 and Maven, plus some other required packages
# - Install Docker engine
# - Install CQLSH Astra
# - Install NoSQLBench, create activity folder, upload activity
# - Install DSBulk
# - Install CDM and its Spark dependency
# - Install AWS CLI
# - Add the DSE server private IPs to /etc/hosts
# - Enable passwordless SSH to the DSE servers


---
- name: Install Java packages and Docker engine
  hosts: clients
  become: yes

  tasks:
    - name: Install OpenJDK, Maven and other required packages if not yet present
      apt:
        update_cache: yes
        name: "{{ required_packages }}"
        state: present
      vars:
        required_packages: [ 'openjdk-11-jdk', 'maven', 'unzip', 'libfuse2', 'jq' ]

#    - name: Clean up the Docker test container if it exists
#      docker_container:
#        name: "test"
#        state: absent
    - name: Check if Docker Engine is already installed
      command: docker run --name test hello-world
      register: docker_installed
      ignore_errors: yes
    - name: Install Docker Engine if not already present
      include_tasks: tasks/install_docker.yaml
      when: docker_installed.failed
    - name: Clean up the Docker test container if it exists
      docker_container:
        name: "test"
        state: absent

- name: Clean up home directory
  hosts: clients
  become: yes

  tasks:
    - name: Clean up /home/ubuntu
      include_tasks: tasks/clean_up_home_dir.yaml


- name: Install all CQL clients
  hosts: clients

  tasks:
    - name: Install cqlsh-astra
      include_tasks: tasks/install_cqlsh.yaml

    - name: Install nb5
      include_tasks: tasks/install_nb5.yaml

    - name: Install DSBulk
      include_tasks: tasks/install_dsbulk.yaml

    - name: Install CDM as Jar
      include_tasks: tasks/install_cdm.yaml

- name: Install the AWS CLI
  hosts: clients
  become: yes

  tasks:
    - name: Install the AWS CLI locally
      include_tasks: tasks/install_awscli.yaml

- name: Append node entries to /etc/hosts
  hosts: clients
  become: yes

  tasks:
    - name: Append DSE node 0 entry to /etc/hosts
      lineinfile:
        dest: /etc/hosts
        line: "{{ dse0_priv_ip }} dse0"
    - name: Append DSE node 1 entry to /etc/hosts
      lineinfile:
        dest: /etc/hosts
        line: "{{ dse1_priv_ip}} dse1"
    - name: Append DSE node 2 entry to /etc/hosts
      lineinfile:
        dest: /etc/hosts
        line: "{{ dse2_priv_ip }} dse2"

- name: Enable password-less SSH from application servers to DSE nodes
  hosts: clients

  tasks:
    - name: Copy private key to application servers, renaming it to id_rsa
      ansible.builtin.copy:
        src: "{{ priv_key_path }}"
        dest: /home/ubuntu/.ssh/id_rsa
        owner: ubuntu
        group: ubuntu
        mode: '0400'

